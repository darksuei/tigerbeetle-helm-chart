apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "tigerbeetle.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "tigerbeetle.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.statefulset.replicas }}
  serviceName: {{ template "tigerbeetle.fullname" . }}
  selector:
    matchLabels:
      {{- include "tigerbeetle.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "tigerbeetle.selectorLabels" . | nindent 8 }}
        {{- toYaml .Values.statefulset.labels | nindent 8 }}
    spec:
      hostNetwork: true # Note: This is an attempt to allow for inter-pod communications
      serviceAccountName: {{ include "tigerbeetle.serviceAccountName" . }}
      restartPolicy: Always
      containers:
        - name: init-tigerbeetle
          image: "{{ .Values.statefulset.image.repository }}:{{ .Values.statefulset.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.statefulset.image.pullPolicy }}
          command:
            - /bin/sh
            - -c
            - |
              set -ex
              REPLICA=${POD_NAME##*-}
              FMT_CLUSTER=$(echo $CLUSTER | awk '{ printf("%010d\n", $1) }')
              FMT_REPLICA=$(echo $REPLICA | awk '{ printf("%03d\n", $1) }')
              ls /var/lib/tigerbeetle
              DATA_FILE=/var/lib/tigerbeetle/cluster_${FMT_CLUSTER}_replica_${FMT_REPLICA}.tigerbeetle
              if [ -f "$DATA_FILE" ]; then
                echo "Removing existing data file: $DATA_FILE"
                rm $DATA_FILE
              fi
              /tigerbeetle format --cluster=$CLUSTER --replica=$REPLICA --replica-count=$REPLICA_COUNT $DATA_FILE;
              ADDRESSES=""
              for n in $(seq 0 {{sub .Values.statefulset.replicas 1}})
              do
                if [ "$n" != "$REPLICA" ]
                then
                  ADDRESSES="$ADDRESSES,127.0.0.1:300$n"
                else
                  ADDRESSES="$ADDRESSES,0.0.0.0:4242"
                fi
              done
              ADDRESSES=${ADDRESSES#?}
              /tigerbeetle start --addresses=$ADDRESSES $DATA_FILE
          env:
            - name: CLUSTER
              value: "{{ .Values.statefulset.clusterId }}"
            - name: REPLICA_COUNT
              value: "{{ .Values.statefulset.replicas }}"
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: data
              mountPath: /var/lib/tigerbeetle
          ports:
            - containerPort: 3000
              protocol: TCP
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: data

  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          app.kubernetes.io/name: {{ include "tigerbeetle.name" . }}
          app.kubernetes.io/instance: {{ .Release.Name | quote }}
      spec:
        accessModes:
          - ReadWriteOnce
      {{- if .Values.storage.persistentVolume.storageClass }}
      {{- if (eq "-" .Values.storage.persistentVolume.storageClass) }}
        storageClassName: "do-block-storage"
      {{- else }}
        storageClassName: {{ .Values.storage.persistentVolume.storageClass | quote}}
      {{- end }}
      {{- end }}
        resources:
          requests:
            storage: {{ .Values.storage.persistentVolume.size | quote }}
